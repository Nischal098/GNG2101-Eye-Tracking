/*
 * File:   CalibrationTest.cpp
 * Author: krigu
 *
 * Created on Dec 29, 2012, 6:21:47 PM
 */

#include <iostream>
#include "opencv2/core/core.hpp"
#include "opencv2/highgui/highgui.hpp"

#include "calibration/Calibration.hpp"
#include "calibration/CalibrationVisualizer.hpp"

#include "CalibrationTest.h"

using namespace std;
using namespace cv;


CPPUNIT_TEST_SUITE_REGISTRATION(CalibrationTest);

CalibrationTest::CalibrationTest() {
}

CalibrationTest::~CalibrationTest() {
}

void CalibrationTest::setUp() {
}

void CalibrationTest::tearDown() {
}

void CalibrationTest::testCalibrtion() {

    Calibration calib;


    //Calibration Point: 40/40
    //Calibration Point: 720/40
    //Calibration Point: 1400/40
    //Calibration Point: 40/450
    //Calibration Point: 720/450
    //Calibration Point: 1400/450
    //Calibration Point: 40/860
    //Calibration Point: 720/860
    //Calibration Point: 1400/860

    // Top left
    vector<Point2f> measurements1;
    Point2f p1(40, 40);
    measurements1.push_back(Point2f(-5.31148, 11.5297));
    measurements1.push_back(Point2f(-5.86224, 11.0498));
    measurements1.push_back(Point2f(-5.94977, 11.9204));
    measurements1.push_back(Point2f(-4.43841, 10.7203));
    measurements1.push_back(Point2f(-4.19849, 10.0192));
    measurements1.push_back(Point2f(-5.15208, 11.0479));
    measurements1.push_back(Point2f(-5.06032, 10.9424));
    measurements1.push_back(Point2f(-4.88037, 10.8171));
    measurements1.push_back(Point2f(-4.61826, 10.5114));
    measurements1.push_back(Point2f(-4.74193, 10.51));
    measurements1.push_back(Point2f(-4.79079, 10.7253));
    measurements1.push_back(Point2f(-4.79177, 10.6504));
    measurements1.push_back(Point2f(-4.75321, 10.6708));
    measurements1.push_back(Point2f(-4.72214, 10.6814));
    measurements1.push_back(Point2f(-4.61958, 10.7461));
    measurements1.push_back(Point2f(-4.78449, 10.729));
    measurements1.push_back(Point2f(-4.79549, 10.7727));
    measurements1.push_back(Point2f(-4.71442, 10.8192));
    measurements1.push_back(Point2f(-4.83446, 10.8151));
    measurements1.push_back(Point2f(-4.97607, 10.6838));
    measurements1.push_back(Point2f(-4.99102, 10.5564));
    measurements1.push_back(Point2f(-5.0535, 10.4979));
    measurements1.push_back(Point2f(-5.18433, 10.3688));
    measurements1.push_back(Point2f(-5.14497, 10.323));
    measurements1.push_back(Point2f(-5.20195, 10.2535));
    measurements1.push_back(Point2f(-5.1692, 10.1912));
    measurements1.push_back(Point2f(-5.10532, 10.0532));
    measurements1.push_back(Point2f(-5.1293, 10.0446));
    measurements1.push_back(Point2f(-5.08454, 10.121));
    measurements1.push_back(Point2f(-4.97528, 10.2093));
    measurements1.push_back(Point2f(-4.85717, 10.3795));
    measurements1.push_back(Point2f(-4.83656, 10.5328));
    measurements1.push_back(Point2f(-4.84014, 10.4779));
    measurements1.push_back(Point2f(-4.93589, 10.4867));
    measurements1.push_back(Point2f(-4.92328, 10.5547));
    measurements1.push_back(Point2f(-4.99492, 10.3587));
    measurements1.push_back(Point2f(-4.944, 10.1916));
    measurements1.push_back(Point2f(-4.96697, 10.3138));
    measurements1.push_back(Point2f(-4.96905, 10.317));
    measurements1.push_back(Point2f(-5.04506, 10.1802));
    measurements1.push_back(Point2f(-5.03167, 10.1197));
    measurements1.push_back(Point2f(-5.08067, 10.1106));
    measurements1.push_back(Point2f(-5.03288, 9.97114));
    measurements1.push_back(Point2f(-5.12932, 9.86068));
    measurements1.push_back(Point2f(-4.94552, 10.0872));
    measurements1.push_back(Point2f(-7.32647, 3.77599));
    measurements1.push_back(Point2f(-7.36316, 4.04295));
    measurements1.push_back(Point2f(-7.37515, 4.22556));
    measurements1.push_back(Point2f(-7.14188, 4.26374));
    measurements1.push_back(Point2f(-7.26017, 4.03499));
    measurements1.push_back(Point2f(-4.79319, 10.6504));
    measurements1.push_back(Point2f(-4.72416, 10.5179));
    measurements1.push_back(Point2f(-4.68508, 10.5494));
    measurements1.push_back(Point2f(-4.69794, 10.8125));
    measurements1.push_back(Point2f(-4.63296, 11.0478));
    measurements1.push_back(Point2f(-4.65575, 11.0023));
    measurements1.push_back(Point2f(-4.59316, 11.0584));
    measurements1.push_back(Point2f(-4.53033, 11.098));
    measurements1.push_back(Point2f(-4.60687, 10.9844));
    measurements1.push_back(Point2f(-4.59173, 10.9354));
    measurements1.push_back(Point2f(-4.73801, 10.9742));
    measurements1.push_back(Point2f(-4.91239, 11.0734));
    measurements1.push_back(Point2f(-4.93107, 11.1112));
    measurements1.push_back(Point2f(-5.01512, 11.1472));
    measurements1.push_back(Point2f(-5.08579, 11.1452));
    measurements1.push_back(Point2f(-4.89379, 11.2006));
    measurements1.push_back(Point2f(-4.81514, 11.1976));
    measurements1.push_back(Point2f(-4.75589, 11.2465));
    measurements1.push_back(Point2f(-4.75021, 11.2913));
    measurements1.push_back(Point2f(-4.70954, 11.1979));
    measurements1.push_back(Point2f(-4.79569, 11.0512));
    measurements1.push_back(Point2f(-4.70635, 10.9287));
    measurements1.push_back(Point2f(-4.69854, 10.7697));
    measurements1.push_back(Point2f(-4.66026, 10.6097));
    measurements1.push_back(Point2f(-4.64763, 10.5553));
    measurements1.push_back(Point2f(-4.54829, 10.5502));
    measurements1.push_back(Point2f(-4.65043, 10.588));
    measurements1.push_back(Point2f(-4.86522, 10.6279));
    measurements1.push_back(Point2f(-4.70377, 10.6408));
    measurements1.push_back(Point2f(-4.73193, 10.6563));
    measurements1.push_back(Point2f(-4.8996, 10.5314));
    measurements1.push_back(Point2f(-4.86657, 10.439));
    CalibrationData data1(p1, measurements1);
    cout << "Point: " << p1 << "Vector: " << data1.getMeasuredMedianVector() << endl;

    // Top center
    vector<Point2f> measurements2;
    Point2f p2(720, 40);
    measurements2.push_back(Point2f(-4.59712, 10.4605));
    measurements2.push_back(Point2f(-4.52308, 10.3729));
    measurements2.push_back(Point2f(-4.54254, 10.371));
    measurements2.push_back(Point2f(-4.47444, 10.5296));
    measurements2.push_back(Point2f(-2.25288, 10.8094));
    measurements2.push_back(Point2f(-0.294505, 10.8839));
    measurements2.push_back(Point2f(1.89904, 11.0948));
    measurements2.push_back(Point2f(4.1685, 11.3769));
    measurements2.push_back(Point2f(6.47244, 11.3288));
    measurements2.push_back(Point2f(6.44198, 11.4313));
    measurements2.push_back(Point2f(6.68604, 11.5425));
    measurements2.push_back(Point2f(6.58136, 11.5719));
    measurements2.push_back(Point2f(6.61384, 11.5995));
    measurements2.push_back(Point2f(6.6095, 11.7652));
    measurements2.push_back(Point2f(6.74628, 11.5924));
    measurements2.push_back(Point2f(6.6499, 11.4782));
    measurements2.push_back(Point2f(6.56956, 11.5338));
    measurements2.push_back(Point2f(6.54342, 11.5671));
    measurements2.push_back(Point2f(6.57504, 11.6875));
    measurements2.push_back(Point2f(6.58102, 11.863));
    measurements2.push_back(Point2f(6.92462, 11.9898));
    measurements2.push_back(Point2f(7.15934, 11.9618));
    measurements2.push_back(Point2f(7.06143, 11.7946));
    measurements2.push_back(Point2f(7.05837, 11.6921));
    measurements2.push_back(Point2f(7.00326, 11.511));
    measurements2.push_back(Point2f(6.76825, 11.4217));
    measurements2.push_back(Point2f(6.5534, 11.3684));
    measurements2.push_back(Point2f(6.63431, 11.4794));
    measurements2.push_back(Point2f(6.65709, 11.5666));
    measurements2.push_back(Point2f(6.68819, 11.5));
    measurements2.push_back(Point2f(6.69049, 11.3512));
    measurements2.push_back(Point2f(6.79848, 11.2351));
    measurements2.push_back(Point2f(6.8892, 11.1118));
    measurements2.push_back(Point2f(6.95763, 10.9995));
    measurements2.push_back(Point2f(6.99983, 11.0221));
    measurements2.push_back(Point2f(6.94503, 11.0156));
    measurements2.push_back(Point2f(6.98038, 10.9578));
    measurements2.push_back(Point2f(7.03032, 10.7081));
    measurements2.push_back(Point2f(6.89807, 10.5871));
    measurements2.push_back(Point2f(6.86803, 10.3824));
    measurements2.push_back(Point2f(6.97801, 10.4871));
    measurements2.push_back(Point2f(6.95777, 10.4681));
    measurements2.push_back(Point2f(6.96912, 10.8079));
    measurements2.push_back(Point2f(6.95782, 10.6365));
    measurements2.push_back(Point2f(6.99075, 10.7795));
    measurements2.push_back(Point2f(6.99198, 10.6983));
    measurements2.push_back(Point2f(6.83916, 10.5839));
    measurements2.push_back(Point2f(6.91151, 10.4237));
    measurements2.push_back(Point2f(6.77253, 10.3514));
    measurements2.push_back(Point2f(6.6898, 10.4331));
    measurements2.push_back(Point2f(6.57819, 10.6679));
    measurements2.push_back(Point2f(6.87792, 10.8757));
    measurements2.push_back(Point2f(6.45484, 10.559));
    measurements2.push_back(Point2f(6.35609, 10.5449));
    measurements2.push_back(Point2f(6.30854, 10.5888));
    measurements2.push_back(Point2f(6.33933, 10.2694));
    measurements2.push_back(Point2f(6.22392, 10.3986));
    measurements2.push_back(Point2f(6.43581, 10.5744));
    measurements2.push_back(Point2f(6.69207, 10.8057));
    measurements2.push_back(Point2f(7.06759, 10.7469));
    measurements2.push_back(Point2f(6.92252, 10.5774));
    measurements2.push_back(Point2f(7.06119, 10.5242));
    measurements2.push_back(Point2f(7.05985, 10.6613));
    measurements2.push_back(Point2f(7.27122, 10.788));
    measurements2.push_back(Point2f(7.09432, 10.9259));
    measurements2.push_back(Point2f(7.41765, 11.2559));
    measurements2.push_back(Point2f(7.1483, 11.216));
    measurements2.push_back(Point2f(7.00867, 11.3048));
    measurements2.push_back(Point2f(6.6411, 11.3894));
    measurements2.push_back(Point2f(6.44114, 11.2679));
    measurements2.push_back(Point2f(6.12305, 11.2442));
    measurements2.push_back(Point2f(6.11705, 11.2641));
    measurements2.push_back(Point2f(6.3065, 11.3744));
    measurements2.push_back(Point2f(6.63243, 11.3753));
    measurements2.push_back(Point2f(6.64278, 11.3633));
    measurements2.push_back(Point2f(6.71916, 11.4502));
    measurements2.push_back(Point2f(6.81249, 11.5307));
    measurements2.push_back(Point2f(6.61361, 11.5378));
    measurements2.push_back(Point2f(6.38283, 11.4322));
    measurements2.push_back(Point2f(6.68858, 11.5141));
    measurements2.push_back(Point2f(6.72836, 11.5142));
    measurements2.push_back(Point2f(6.60184, 11.5383));
    measurements2.push_back(Point2f(6.74466, 11.4427));
    CalibrationData data2(p2, measurements2);
    cout << "Point: " << p2 << "Vector: " << data2.getMeasuredMedianVector() << endl;


    // Top right
    vector<Point2f> measurements3;
    Point2f p3(1400, 40);
    measurements3.push_back(Point2f(6.64107, 11.3623));
    measurements3.push_back(Point2f(6.53117, 11.3322));
    measurements3.push_back(Point2f(6.44863, 11.1985));
    measurements3.push_back(Point2f(6.48714, 11.0566));
    measurements3.push_back(Point2f(8.9092, 10.6516));
    measurements3.push_back(Point2f(11.5761, 10.5159));
    measurements3.push_back(Point2f(14.0055, 10.3062));
    measurements3.push_back(Point2f(16.573, 10.0826));
    measurements3.push_back(Point2f(18.9133, 9.85871));
    measurements3.push_back(Point2f(19.0301, 9.92851));
    measurements3.push_back(Point2f(18.9437, 9.99815));
    measurements3.push_back(Point2f(18.776, 10.0337));
    measurements3.push_back(Point2f(18.6972, 9.98404));
    measurements3.push_back(Point2f(18.4998, 9.96086));
    measurements3.push_back(Point2f(18.1921, 10.0121));
    measurements3.push_back(Point2f(18.1917, 9.87774));
    measurements3.push_back(Point2f(18.1871, 9.93484));
    measurements3.push_back(Point2f(18.1805, 10.1509));
    measurements3.push_back(Point2f(18.3355, 10.4122));
    measurements3.push_back(Point2f(18.9168, 10.4023));
    measurements3.push_back(Point2f(18.9876, 10.5139));
    measurements3.push_back(Point2f(18.9931, 10.5745));
    measurements3.push_back(Point2f(18.886, 10.5992));
    measurements3.push_back(Point2f(19.0274, 10.4401));
    measurements3.push_back(Point2f(18.7584, 10.6271));
    measurements3.push_back(Point2f(18.6052, 10.7775));
    measurements3.push_back(Point2f(18.5857, 10.7474));
    measurements3.push_back(Point2f(18.8233, 10.6818));
    measurements3.push_back(Point2f(19.0508, 10.6375));
    measurements3.push_back(Point2f(18.7892, 10.6221));
    measurements3.push_back(Point2f(18.9505, 10.4267));
    measurements3.push_back(Point2f(18.7357, 10.2981));
    measurements3.push_back(Point2f(18.7346, 10.3528));
    measurements3.push_back(Point2f(18.4503, 10.4539));
    measurements3.push_back(Point2f(18.8246, 10.5678));
    measurements3.push_back(Point2f(18.7169, 10.5719));
    measurements3.push_back(Point2f(18.9545, 10.6227));
    measurements3.push_back(Point2f(18.7217, 10.668));
    measurements3.push_back(Point2f(18.973, 10.5577));
    measurements3.push_back(Point2f(18.6806, 10.3594));
    measurements3.push_back(Point2f(18.5326, 10.2786));
    measurements3.push_back(Point2f(18.5384, 10.0344));
    measurements3.push_back(Point2f(18.516, 9.84033));
    measurements3.push_back(Point2f(18.1968, 9.81928));
    measurements3.push_back(Point2f(18.3825, 9.62642));
    measurements3.push_back(Point2f(18.6253, 9.88503));
    measurements3.push_back(Point2f(18.7069, 10.1335));
    measurements3.push_back(Point2f(19.0318, 10.0545));
    measurements3.push_back(Point2f(19.5127, 10.0981));
    measurements3.push_back(Point2f(19.4021, 10.2066));
    measurements3.push_back(Point2f(19.5537, 9.96751));
    measurements3.push_back(Point2f(19.4581, 9.96743));
    measurements3.push_back(Point2f(19.3012, 10.1897));
    measurements3.push_back(Point2f(19.1957, 9.95702));
    measurements3.push_back(Point2f(19.3887, 10.3206));
    measurements3.push_back(Point2f(19.3037, 10.2713));
    measurements3.push_back(Point2f(19.2568, 10.2968));
    measurements3.push_back(Point2f(19.1992, 10.1748));
    measurements3.push_back(Point2f(18.753, 10.8095));
    measurements3.push_back(Point2f(18.5463, 10.5794));
    measurements3.push_back(Point2f(18.6588, 10.5327));
    measurements3.push_back(Point2f(18.7212, 10.4275));
    measurements3.push_back(Point2f(18.6835, 10.4062));
    measurements3.push_back(Point2f(18.8219, 10.0146));
    measurements3.push_back(Point2f(19.0337, 9.8226));
    measurements3.push_back(Point2f(18.7822, 9.97153));
    measurements3.push_back(Point2f(18.7477, 9.85559));
    measurements3.push_back(Point2f(18.7518, 9.99202));
    measurements3.push_back(Point2f(18.7446, 10.0687));
    measurements3.push_back(Point2f(18.4058, 10.1215));
    measurements3.push_back(Point2f(18.4611, 9.97136));
    measurements3.push_back(Point2f(18.3198, 10.1759));
    measurements3.push_back(Point2f(18.3486, 10.0579));
    measurements3.push_back(Point2f(18.3806, 10.0855));
    measurements3.push_back(Point2f(18.4527, 10.1944));
    measurements3.push_back(Point2f(18.2888, 10.3723));
    measurements3.push_back(Point2f(18.4208, 10.1768));
    measurements3.push_back(Point2f(18.4706, 10.4567));
    measurements3.push_back(Point2f(18.4737, 10.4043));
    measurements3.push_back(Point2f(18.2888, 10.5234));
    measurements3.push_back(Point2f(18.4193, 10.518));
    measurements3.push_back(Point2f(18.5872, 10.4679));
    measurements3.push_back(Point2f(18.6511, 10.0806));
    measurements3.push_back(Point2f(18.7966, 9.99475));
    measurements3.push_back(Point2f(18.9558, 10.0441));
    measurements3.push_back(Point2f(19.1182, 9.94827));
    CalibrationData data3(p3, measurements3);
    cout << "Point: " << p3 << "Vector: " << data3.getMeasuredMedianVector() << endl;

    // middle left
    vector<Point2f> measurements4;
    Point2f p4(40, 437);
    measurements4.push_back(Point2f(18.8964, 10.3236));
    measurements4.push_back(Point2f(18.9639, 10.2836));
    measurements4.push_back(Point2f(19.0638, 10.1216));
    measurements4.push_back(Point2f(19.0239, 9.75503));
    measurements4.push_back(Point2f(13.9902, 8.81174));
    measurements4.push_back(Point2f(9.37293, 7.64502));
    measurements4.push_back(Point2f(4.49141, 6.66624));
    measurements4.push_back(Point2f(-0.584007, 5.88184));
    measurements4.push_back(Point2f(-4.95437, 4.96818));
    measurements4.push_back(Point2f(-4.66557, 4.89573));
    measurements4.push_back(Point2f(-4.66185, 4.75323));
    measurements4.push_back(Point2f(-4.55505, 4.887));
    measurements4.push_back(Point2f(-4.37894, 4.82706));
    measurements4.push_back(Point2f(-4.45721, 4.79054));
    measurements4.push_back(Point2f(-4.55417, 4.79163));
    measurements4.push_back(Point2f(-4.57276, 4.86181));
    measurements4.push_back(Point2f(-4.60225, 4.90054));
    measurements4.push_back(Point2f(-4.64221, 4.9069));
    measurements4.push_back(Point2f(-4.84881, 4.96344));
    measurements4.push_back(Point2f(-5.09128, 5.06823));
    measurements4.push_back(Point2f(-5.1976, 5.10116));
    measurements4.push_back(Point2f(-5.27735, 5.13833));
    measurements4.push_back(Point2f(-5.28553, 5.22977));
    measurements4.push_back(Point2f(-5.24008, 5.29306));
    measurements4.push_back(Point2f(-5.00348, 5.27439));
    measurements4.push_back(Point2f(-4.82919, 5.26377));
    measurements4.push_back(Point2f(-4.91927, 5.18478));
    measurements4.push_back(Point2f(-4.96587, 5.07988));
    measurements4.push_back(Point2f(-4.98909, 5.16364));
    measurements4.push_back(Point2f(-4.98916, 5.2506));
    measurements4.push_back(Point2f(-5.01216, 5.14808));
    measurements4.push_back(Point2f(-5.06226, 5.1574));
    measurements4.push_back(Point2f(-5.00298, 5.25446));
    measurements4.push_back(Point2f(-4.89665, 5.12977));
    measurements4.push_back(Point2f(-5.07399, 5.01113));
    measurements4.push_back(Point2f(-5.20597, 5.07243));
    measurements4.push_back(Point2f(-5.08427, 5.12388));
    measurements4.push_back(Point2f(-4.98827, 5.14735));
    measurements4.push_back(Point2f(-5.005, 5.18528));
    measurements4.push_back(Point2f(-4.92561, 5.30183));
    measurements4.push_back(Point2f(-4.72617, 5.23558));
    measurements4.push_back(Point2f(-4.63768, 5.26125));
    measurements4.push_back(Point2f(-8.03775, -4.83074));
    measurements4.push_back(Point2f(-8.09862, -4.7179));
    measurements4.push_back(Point2f(-8.1637, -4.67014));
    measurements4.push_back(Point2f(-8.42518, -4.62287));
    measurements4.push_back(Point2f(-8.61429, -4.72351));
    measurements4.push_back(Point2f(-5.27692, 5.29518));
    measurements4.push_back(Point2f(-5.2788, 5.12141));
    measurements4.push_back(Point2f(-5.21122, 4.95573));
    measurements4.push_back(Point2f(-5.00774, 4.83722));
    measurements4.push_back(Point2f(-4.86351, 4.80039));
    measurements4.push_back(Point2f(-4.81088, 4.768));
    measurements4.push_back(Point2f(-4.77926, 4.73592));
    measurements4.push_back(Point2f(-4.69831, 4.66676));
    measurements4.push_back(Point2f(-4.75216, 4.71468));
    measurements4.push_back(Point2f(-4.65994, 4.80478));
    measurements4.push_back(Point2f(-4.61459, 4.80201));
    measurements4.push_back(Point2f(-4.46795, 4.86822));
    measurements4.push_back(Point2f(-4.46075, 4.81981));
    measurements4.push_back(Point2f(-4.52236, 4.90489));
    measurements4.push_back(Point2f(-4.62693, 4.77591));
    measurements4.push_back(Point2f(-4.72887, 4.66579));
    measurements4.push_back(Point2f(-4.81307, 4.63535));
    measurements4.push_back(Point2f(-4.93103, 4.69517));
    measurements4.push_back(Point2f(-4.87506, 4.51615));
    measurements4.push_back(Point2f(-4.92345, 4.55132));
    measurements4.push_back(Point2f(-4.86761, 4.67951));
    measurements4.push_back(Point2f(-4.92024, 4.70455));
    measurements4.push_back(Point2f(-4.63287, 4.70907));
    measurements4.push_back(Point2f(-4.51145, 4.83734));
    measurements4.push_back(Point2f(-4.30511, 4.94953));
    measurements4.push_back(Point2f(-4.22014, 4.91794));
    measurements4.push_back(Point2f(-4.22314, 4.83195));
    measurements4.push_back(Point2f(-4.28389, 4.89103));
    measurements4.push_back(Point2f(-4.39593, 5.0364));
    measurements4.push_back(Point2f(-4.59733, 5.03236));
    measurements4.push_back(Point2f(-4.74116, 5.02926));
    measurements4.push_back(Point2f(-4.78412, 5.2494));
    measurements4.push_back(Point2f(-4.83467, 5.35098));
    measurements4.push_back(Point2f(-4.83546, 5.40194));
    measurements4.push_back(Point2f(-4.80219, 5.41372));
    measurements4.push_back(Point2f(-4.74019, 5.52099));
    measurements4.push_back(Point2f(-4.5302, 5.37433));
    measurements4.push_back(Point2f(-4.57388, 5.34946));
    measurements4.push_back(Point2f(-4.63743, 5.27323));
    measurements4.push_back(Point2f(-4.66527, 5.20719));
    measurements4.push_back(Point2f(-4.60687, 5.09581));
    measurements4.push_back(Point2f(-4.71592, 5.00461));
    measurements4.push_back(Point2f(-4.68943, 4.9435));
    measurements4.push_back(Point2f(-4.59596, 4.78302));
    measurements4.push_back(Point2f(-4.55475, 4.87328));
    measurements4.push_back(Point2f(-4.57063, 4.83759));
    measurements4.push_back(Point2f(-4.50313, 4.84703));
    measurements4.push_back(Point2f(-4.58016, 4.76556));
    measurements4.push_back(Point2f(-4.48452, 4.76249));
    measurements4.push_back(Point2f(-4.38426, 4.67617));
    measurements4.push_back(Point2f(-4.43724, 4.74324));
    measurements4.push_back(Point2f(-4.54826, 4.83011));
    measurements4.push_back(Point2f(-4.52806, 4.93519));
    measurements4.push_back(Point2f(-4.52252, 4.91632));
    measurements4.push_back(Point2f(-4.60489, 4.88318));
    measurements4.push_back(Point2f(-4.61672, 4.91969));
    measurements4.push_back(Point2f(-4.45813, 4.76976));
    measurements4.push_back(Point2f(-4.42006, 4.71016));
    measurements4.push_back(Point2f(-4.51234, 4.70141));
    measurements4.push_back(Point2f(-4.48218, 4.67304));
    measurements4.push_back(Point2f(-4.33927, 4.49359));
    measurements4.push_back(Point2f(-4.43963, 4.47275));
    measurements4.push_back(Point2f(-4.51204, 4.38949));
    measurements4.push_back(Point2f(-4.44365, 4.46335));
    measurements4.push_back(Point2f(-4.56783, 4.51157));
    measurements4.push_back(Point2f(-4.61822, 4.52616));
    measurements4.push_back(Point2f(-4.67121, 4.53922));
    measurements4.push_back(Point2f(-4.74982, 4.4717));
    measurements4.push_back(Point2f(-4.89773, 4.37078));
    measurements4.push_back(Point2f(-4.83465, 4.36994));
    measurements4.push_back(Point2f(-4.9351, 4.50075));
    measurements4.push_back(Point2f(-4.77911, 4.64692));
    measurements4.push_back(Point2f(-4.67581, 4.81905));
    measurements4.push_back(Point2f(-4.51376, 4.92456));
    measurements4.push_back(Point2f(-4.39993, 4.89835));
    measurements4.push_back(Point2f(-4.29459, 4.87229));
    measurements4.push_back(Point2f(-4.41064, 4.75224));
    measurements4.push_back(Point2f(-4.46502, 4.69822));
    measurements4.push_back(Point2f(-4.54613, 4.64863));
    measurements4.push_back(Point2f(-4.67847, 4.57548));
    measurements4.push_back(Point2f(-4.70222, 4.39852));
    measurements4.push_back(Point2f(-4.77193, 4.27834));
    measurements4.push_back(Point2f(-4.74908, 4.15913));
    measurements4.push_back(Point2f(-4.73791, 4.04192));
    measurements4.push_back(Point2f(-4.64879, 4.0242));
    measurements4.push_back(Point2f(-4.77592, 4.09055));
    CalibrationData data4(p4, measurements4);
    cout << "Point: " << p4 << "Vector: " << data4.getMeasuredMedianVector() << endl;

    // middle center
    vector<Point2f> measurements5;
    Point2f p5(720, 437);
    measurements5.push_back(Point2f(-4.79042, 4.15951));
    measurements5.push_back(Point2f(-4.72922, 4.23588));
    measurements5.push_back(Point2f(-4.79035, 4.31718));
    measurements5.push_back(Point2f(-4.91926, 4.40041));
    measurements5.push_back(Point2f(-2.44081, 4.55295));
    measurements5.push_back(Point2f(-0.115498, 4.74911));
    measurements5.push_back(Point2f(2.17509, 5.07471));
    measurements5.push_back(Point2f(4.65046, 5.36384));
    measurements5.push_back(Point2f(7.17881, 5.5545));
    measurements5.push_back(Point2f(7.21501, 5.70699));
    measurements5.push_back(Point2f(7.45827, 5.77473));
    measurements5.push_back(Point2f(7.52189, 5.73581));
    measurements5.push_back(Point2f(7.45171, 5.58829));
    measurements5.push_back(Point2f(7.63358, 5.60887));
    measurements5.push_back(Point2f(7.74333, 5.6197));
    measurements5.push_back(Point2f(7.65085, 5.61545));
    measurements5.push_back(Point2f(7.72361, 5.56003));
    measurements5.push_back(Point2f(7.73934, 5.66253));
    measurements5.push_back(Point2f(7.66663, 5.52999));
    measurements5.push_back(Point2f(7.43292, 5.52931));
    measurements5.push_back(Point2f(7.33127, 5.61616));
    measurements5.push_back(Point2f(7.3137, 5.64754));
    measurements5.push_back(Point2f(7.45885, 5.67911));
    measurements5.push_back(Point2f(7.23256, 5.69861));
    measurements5.push_back(Point2f(7.38608, 5.59718));
    measurements5.push_back(Point2f(7.51988, 5.5145));
    measurements5.push_back(Point2f(7.53392, 5.48684));
    measurements5.push_back(Point2f(7.53034, 5.36466));
    measurements5.push_back(Point2f(7.53842, 5.33015));
    measurements5.push_back(Point2f(7.54875, 5.42501));
    measurements5.push_back(Point2f(7.60346, 5.29951));
    measurements5.push_back(Point2f(7.49295, 5.29805));
    measurements5.push_back(Point2f(7.33521, 5.36065));
    measurements5.push_back(Point2f(7.41457, 5.30574));
    measurements5.push_back(Point2f(7.37158, 5.15524));
    measurements5.push_back(Point2f(7.33428, 5.3641));
    measurements5.push_back(Point2f(7.47767, 5.39381));
    measurements5.push_back(Point2f(7.58613, 5.43456));
    measurements5.push_back(Point2f(7.56752, 5.59238));
    measurements5.push_back(Point2f(7.35494, 5.76448));
    measurements5.push_back(Point2f(7.29212, 5.72274));
    measurements5.push_back(Point2f(7.13641, 5.74352));
    measurements5.push_back(Point2f(7.16688, 5.78511));
    measurements5.push_back(Point2f(7.15388, 5.77711));
    measurements5.push_back(Point2f(7.3102, 5.61862));
    measurements5.push_back(Point2f(7.28124, 5.57181));
    measurements5.push_back(Point2f(7.45488, 5.41804));
    measurements5.push_back(Point2f(7.40163, 5.3979));
    measurements5.push_back(Point2f(7.31371, 5.31384));
    measurements5.push_back(Point2f(7.20523, 5.27083));
    measurements5.push_back(Point2f(7.1468, 5.15097));
    measurements5.push_back(Point2f(7.05144, 5.25667));
    measurements5.push_back(Point2f(6.95167, 5.25321));
    measurements5.push_back(Point2f(6.97471, 5.37314));
    measurements5.push_back(Point2f(7.09702, 5.49938));
    measurements5.push_back(Point2f(7.2393, 5.54135));
    measurements5.push_back(Point2f(7.28396, 5.49235));
    measurements5.push_back(Point2f(7.30035, 5.45881));
    measurements5.push_back(Point2f(7.47818, 5.42393));
    measurements5.push_back(Point2f(7.50651, 5.40339));
    measurements5.push_back(Point2f(7.3827, 5.50879));
    measurements5.push_back(Point2f(7.38524, 5.45727));
    measurements5.push_back(Point2f(7.48767, 5.4686));
    measurements5.push_back(Point2f(7.32655, 5.44785));
    measurements5.push_back(Point2f(7.31453, 5.34329));
    measurements5.push_back(Point2f(7.48331, 5.26029));
    measurements5.push_back(Point2f(7.50247, 5.35952));
    measurements5.push_back(Point2f(7.46276, 5.33109));
    measurements5.push_back(Point2f(7.44196, 5.37612));
    measurements5.push_back(Point2f(7.3044, 5.4198));
    measurements5.push_back(Point2f(7.12401, 5.54784));
    measurements5.push_back(Point2f(7.24062, 5.50286));
    measurements5.push_back(Point2f(7.0387, 5.56311));
    measurements5.push_back(Point2f(7.22932, 5.58302));
    measurements5.push_back(Point2f(7.35335, 5.69474));
    measurements5.push_back(Point2f(7.30538, 5.65977));
    measurements5.push_back(Point2f(7.05517, 5.77213));
    measurements5.push_back(Point2f(7.24677, 5.78084));
    measurements5.push_back(Point2f(7.15197, 5.62698));
    measurements5.push_back(Point2f(7.03917, 5.49522));
    measurements5.push_back(Point2f(7.1679, 5.44388));
    measurements5.push_back(Point2f(7.12719, 5.36761));
    measurements5.push_back(Point2f(7.04243, 5.27709));
    measurements5.push_back(Point2f(6.94794, 5.27541));
    measurements5.push_back(Point2f(7.00462, 5.29687));
    measurements5.push_back(Point2f(6.93264, 5.2877));
    measurements5.push_back(Point2f(6.9392, 5.24964));
    measurements5.push_back(Point2f(7.01378, 5.30453));
    measurements5.push_back(Point2f(7.05332, 5.38962));
    measurements5.push_back(Point2f(7.1424, 5.44961));
    measurements5.push_back(Point2f(7.12612, 5.40111));
    measurements5.push_back(Point2f(7.20225, 5.36073));
    measurements5.push_back(Point2f(7.33306, 5.25739));
    measurements5.push_back(Point2f(7.33699, 5.15929));
    measurements5.push_back(Point2f(7.24918, 5.11475));
    measurements5.push_back(Point2f(7.36769, 5.17587));
    measurements5.push_back(Point2f(7.31348, 5.31655));
    measurements5.push_back(Point2f(7.09671, 5.22178));
    measurements5.push_back(Point2f(7.12234, 5.3478));
    measurements5.push_back(Point2f(7.2451, 5.40888));
    measurements5.push_back(Point2f(7.25275, 5.47506));
    measurements5.push_back(Point2f(7.27812, 5.37793));
    measurements5.push_back(Point2f(7.24792, 5.55418));
    measurements5.push_back(Point2f(7.4374, 5.53201));
    measurements5.push_back(Point2f(7.42966, 5.51057));
    measurements5.push_back(Point2f(7.32806, 5.53475));
    measurements5.push_back(Point2f(7.46018, 5.41915));
    measurements5.push_back(Point2f(7.56475, 5.26852));
    measurements5.push_back(Point2f(7.37313, 5.36452));
    measurements5.push_back(Point2f(7.24588, 5.37069));
    measurements5.push_back(Point2f(7.33689, 5.2784));
    measurements5.push_back(Point2f(7.12566, 5.28026));
    measurements5.push_back(Point2f(7.01526, 5.3316));
    measurements5.push_back(Point2f(7.06658, 5.1369));
    measurements5.push_back(Point2f(7.15387, 5.21413));
    measurements5.push_back(Point2f(7.14479, 5.09106));
    measurements5.push_back(Point2f(7.32602, 5.14107));
    measurements5.push_back(Point2f(7.4135, 5.12195));
    measurements5.push_back(Point2f(7.3764, 5.15558));
    measurements5.push_back(Point2f(7.31022, 5.01977));
    measurements5.push_back(Point2f(7.32159, 5.04023));
    measurements5.push_back(Point2f(7.44567, 5.13252));
    measurements5.push_back(Point2f(7.52353, 5.24493));
    measurements5.push_back(Point2f(7.64534, 5.30484));
    measurements5.push_back(Point2f(7.65077, 5.25287));
    measurements5.push_back(Point2f(7.63026, 5.35504));
    measurements5.push_back(Point2f(7.37527, 5.28033));
    measurements5.push_back(Point2f(7.31284, 5.25258));
    measurements5.push_back(Point2f(7.09093, 5.1998));
    measurements5.push_back(Point2f(7.12803, 5.26552));
    measurements5.push_back(Point2f(7.07371, 5.2062));
    measurements5.push_back(Point2f(7.10584, 5.20967));
    measurements5.push_back(Point2f(7.14026, 5.2132));
    measurements5.push_back(Point2f(7.20934, 5.06421));
    measurements5.push_back(Point2f(7.22478, 5.05817));
    measurements5.push_back(Point2f(7.31454, 5.05977));
    measurements5.push_back(Point2f(7.54164, 5.02896));
    measurements5.push_back(Point2f(7.53922, 4.96639));
    measurements5.push_back(Point2f(7.68488, 5.02896));
    CalibrationData data5(p5, measurements5);
    cout << "Point: " << p5 << "Vector: " << data5.getMeasuredMedianVector() << endl;

    // middle right
    vector<Point2f> measurements6;
    Point2f p6(1400, 437);
    measurements6.push_back(Point2f(7.72592, 4.94309));
    measurements6.push_back(Point2f(7.71538, 4.98103));
    measurements6.push_back(Point2f(7.58355, 4.99844));
    measurements6.push_back(Point2f(7.34173, 5.15191));
    measurements6.push_back(Point2f(9.47433, 5.25373));
    measurements6.push_back(Point2f(11.6404, 5.35521));
    measurements6.push_back(Point2f(13.839, 5.18437));
    measurements6.push_back(Point2f(16.0501, 5.13373));
    measurements6.push_back(Point2f(18.667, 4.97503));
    measurements6.push_back(Point2f(18.7616, 4.95206));
    measurements6.push_back(Point2f(18.8513, 4.83481));
    measurements6.push_back(Point2f(18.8005, 5.02561));
    measurements6.push_back(Point2f(18.7724, 5.05201));
    measurements6.push_back(Point2f(18.6343, 4.97174));
    measurements6.push_back(Point2f(18.5741, 5.07332));
    measurements6.push_back(Point2f(18.547, 5.25313));
    measurements6.push_back(Point2f(18.5892, 5.12524));
    measurements6.push_back(Point2f(18.6442, 5.08855));
    measurements6.push_back(Point2f(18.6554, 5.16202));
    measurements6.push_back(Point2f(18.6645, 4.96926));
    measurements6.push_back(Point2f(18.6337, 4.93493));
    measurements6.push_back(Point2f(18.7022, 4.96756));
    measurements6.push_back(Point2f(18.7375, 4.98153));
    measurements6.push_back(Point2f(18.7152, 4.93905));
    measurements6.push_back(Point2f(18.6661, 4.96077));
    measurements6.push_back(Point2f(18.7523, 4.91803));
    measurements6.push_back(Point2f(18.75, 5.01747));
    measurements6.push_back(Point2f(18.8193, 5.16168));
    measurements6.push_back(Point2f(18.9356, 5.24527));
    measurements6.push_back(Point2f(19.0598, 5.25321));
    measurements6.push_back(Point2f(18.9194, 5.21455));
    measurements6.push_back(Point2f(18.9237, 5.06789));
    measurements6.push_back(Point2f(18.806, 4.96211));
    measurements6.push_back(Point2f(18.6921, 4.95572));
    measurements6.push_back(Point2f(18.6787, 5.01671));
    measurements6.push_back(Point2f(18.7738, 5.00125));
    measurements6.push_back(Point2f(18.838, 5.12491));
    measurements6.push_back(Point2f(18.8935, 5.16176));
    measurements6.push_back(Point2f(18.9501, 5.16494));
    measurements6.push_back(Point2f(18.9827, 5.23763));
    measurements6.push_back(Point2f(18.9774, 5.12083));
    measurements6.push_back(Point2f(18.9696, 5.02159));
    measurements6.push_back(Point2f(18.9985, 4.9977));
    measurements6.push_back(Point2f(18.9442, 4.95261));
    measurements6.push_back(Point2f(18.7577, 4.76083));
    measurements6.push_back(Point2f(18.783, 4.85695));
    measurements6.push_back(Point2f(18.7332, 4.85007));
    measurements6.push_back(Point2f(18.6224, 4.76008));
    measurements6.push_back(Point2f(18.5442, 4.73645));
    measurements6.push_back(Point2f(18.6947, 4.81295));
    measurements6.push_back(Point2f(18.6653, 4.76805));
    measurements6.push_back(Point2f(18.6334, 4.85641));
    measurements6.push_back(Point2f(18.6108, 4.99088));
    measurements6.push_back(Point2f(18.7016, 4.9231));
    measurements6.push_back(Point2f(18.6108, 4.94654));
    measurements6.push_back(Point2f(18.6913, 4.93033));
    measurements6.push_back(Point2f(18.7183, 4.89044));
    measurements6.push_back(Point2f(18.6527, 4.76564));
    measurements6.push_back(Point2f(18.5547, 4.90396));
    measurements6.push_back(Point2f(18.6064, 5.0332));
    measurements6.push_back(Point2f(18.3846, 5.10932));
    measurements6.push_back(Point2f(18.3434, 5.15501));
    measurements6.push_back(Point2f(18.3552, 5.23243));
    measurements6.push_back(Point2f(18.3258, 5.2741));
    measurements6.push_back(Point2f(18.2755, 5.16718));
    measurements6.push_back(Point2f(18.4407, 5.12239));
    measurements6.push_back(Point2f(18.4188, 5.14293));
    measurements6.push_back(Point2f(18.6287, 5.10525));
    measurements6.push_back(Point2f(18.7024, 4.96254));
    measurements6.push_back(Point2f(18.6177, 4.87222));
    measurements6.push_back(Point2f(18.525, 4.84925));
    measurements6.push_back(Point2f(18.5636, 4.71196));
    measurements6.push_back(Point2f(18.3515, 4.79428));
    measurements6.push_back(Point2f(18.4199, 4.77556));
    measurements6.push_back(Point2f(18.5843, 4.76758));
    measurements6.push_back(Point2f(18.5162, 4.83292));
    measurements6.push_back(Point2f(18.4508, 4.68618));
    measurements6.push_back(Point2f(18.6281, 4.73304));
    measurements6.push_back(Point2f(18.6181, 4.88208));
    measurements6.push_back(Point2f(18.482, 4.81346));
    measurements6.push_back(Point2f(18.4775, 4.81603));
    measurements6.push_back(Point2f(18.5913, 4.93182));
    measurements6.push_back(Point2f(18.5011, 4.73292));
    measurements6.push_back(Point2f(18.4745, 4.63968));
    measurements6.push_back(Point2f(18.4856, 4.64322));
    measurements6.push_back(Point2f(18.6809, 4.61373));
    measurements6.push_back(Point2f(18.6307, 4.70062));
    measurements6.push_back(Point2f(18.6766, 4.75719));
    measurements6.push_back(Point2f(18.6743, 4.76193));
    measurements6.push_back(Point2f(18.6201, 4.8886));
    measurements6.push_back(Point2f(18.416, 4.90047));
    measurements6.push_back(Point2f(18.2643, 4.82464));
    measurements6.push_back(Point2f(18.2887, 4.76603));
    measurements6.push_back(Point2f(18.3887, 4.72252));
    measurements6.push_back(Point2f(18.3846, 4.68817));
    measurements6.push_back(Point2f(18.3664, 4.69294));
    measurements6.push_back(Point2f(18.4586, 4.70595));
    measurements6.push_back(Point2f(18.4674, 4.7081));
    measurements6.push_back(Point2f(18.3994, 4.69835));
    measurements6.push_back(Point2f(18.3901, 4.67421));
    measurements6.push_back(Point2f(18.4453, 4.79692));
    measurements6.push_back(Point2f(18.3732, 4.89172));
    measurements6.push_back(Point2f(18.2808, 4.94963));
    measurements6.push_back(Point2f(18.1895, 5.00087));
    measurements6.push_back(Point2f(18.1622, 5.07169));
    measurements6.push_back(Point2f(18.247, 4.98002));
    measurements6.push_back(Point2f(18.4418, 4.94745));
    measurements6.push_back(Point2f(18.4036, 4.94102));
    measurements6.push_back(Point2f(18.472, 4.92675));
    measurements6.push_back(Point2f(18.6285, 4.78109));
    measurements6.push_back(Point2f(18.6853, 4.68414));
    measurements6.push_back(Point2f(18.6767, 4.54912));
    measurements6.push_back(Point2f(18.7084, 4.4869));
    measurements6.push_back(Point2f(18.6507, 4.48473));
    measurements6.push_back(Point2f(18.637, 4.52642));
    measurements6.push_back(Point2f(18.4637, 4.46339));
    measurements6.push_back(Point2f(18.3108, 4.50753));
    measurements6.push_back(Point2f(18.3778, 4.4972));
    measurements6.push_back(Point2f(18.4786, 4.41964));
    measurements6.push_back(Point2f(18.4307, 4.41451));
    measurements6.push_back(Point2f(18.5513, 4.59196));
    measurements6.push_back(Point2f(18.7866, 4.69172));
    measurements6.push_back(Point2f(18.9188, 4.75856));
    measurements6.push_back(Point2f(18.9526, 4.85528));
    measurements6.push_back(Point2f(19.0937, 4.96211));
    measurements6.push_back(Point2f(19.2736, 4.98179));
    measurements6.push_back(Point2f(19.1834, 5.03205));
    measurements6.push_back(Point2f(19.084, 4.97463));
    measurements6.push_back(Point2f(19.0563, 5.00022));
    measurements6.push_back(Point2f(18.9787, 4.96418));
    measurements6.push_back(Point2f(18.804, 4.87747));
    measurements6.push_back(Point2f(18.7946, 4.70109));
    measurements6.push_back(Point2f(18.8672, 4.81573));
    measurements6.push_back(Point2f(18.8592, 4.85097));
    measurements6.push_back(Point2f(18.8693, 4.92199));
    measurements6.push_back(Point2f(18.8895, 4.86259));
    measurements6.push_back(Point2f(18.906, 4.94315));
    CalibrationData data6(p6, measurements6);
    cout << "Point: " << p6 << "Vector: " << data6.getMeasuredMedianVector() << endl;

    // bottom left
    vector<Point2f> measurements7;
    Point2f p7(40, 834);
    measurements7.push_back(Point2f(18.811, 5.03171));
    measurements7.push_back(Point2f(18.9308, 5.09594));
    measurements7.push_back(Point2f(18.9931, 5.12424));
    measurements7.push_back(Point2f(18.9512, 5.26796));
    measurements7.push_back(Point2f(14.3195, 4.05228));
    measurements7.push_back(Point2f(9.74662, 2.73489));
    measurements7.push_back(Point2f(5.0865, 1.43369));
    measurements7.push_back(Point2f(0.348119, 0.114885));
    measurements7.push_back(Point2f(-4.21583, -1.08552));
    measurements7.push_back(Point2f(-4.13222, -0.932767));
    measurements7.push_back(Point2f(-4.1578, -0.846188));
    measurements7.push_back(Point2f(-4.16333, -0.797984));
    measurements7.push_back(Point2f(-4.01094, -0.679979));
    measurements7.push_back(Point2f(-4.00341, -0.612988));
    measurements7.push_back(Point2f(-4.1122, -0.705554));
    measurements7.push_back(Point2f(-4.0333, -0.825624));
    measurements7.push_back(Point2f(-4.15119, -0.87202));
    measurements7.push_back(Point2f(-4.28993, -0.907866));
    measurements7.push_back(Point2f(-4.148, -0.965254));
    measurements7.push_back(Point2f(-4.06165, -0.881935));
    measurements7.push_back(Point2f(-4.07781, -0.947316));
    measurements7.push_back(Point2f(-3.93539, -0.991132));
    measurements7.push_back(Point2f(-3.81024, -1.04096));
    measurements7.push_back(Point2f(-4.08095, -1.11886));
    measurements7.push_back(Point2f(-4.24675, -1.21642));
    measurements7.push_back(Point2f(-4.38307, -1.10795));
    measurements7.push_back(Point2f(-4.48826, -1.10295));
    measurements7.push_back(Point2f(-4.67134, -1.03611));
    measurements7.push_back(Point2f(-4.50809, -1.00369));
    measurements7.push_back(Point2f(-4.48719, -0.929756));
    measurements7.push_back(Point2f(-4.41789, -0.825037));
    measurements7.push_back(Point2f(-4.33802, -0.798227));
    measurements7.push_back(Point2f(-4.17274, -0.875896));
    measurements7.push_back(Point2f(-4.33888, -0.948767));
    measurements7.push_back(Point2f(-4.23434, -0.965817));
    measurements7.push_back(Point2f(-4.28472, -1.0526));
    measurements7.push_back(Point2f(-4.41206, -1.02913));
    measurements7.push_back(Point2f(-4.39688, -0.904048));
    measurements7.push_back(Point2f(-4.20259, -0.900012));
    measurements7.push_back(Point2f(-4.23596, -1.02977));
    measurements7.push_back(Point2f(-4.20228, -1.14819));
    measurements7.push_back(Point2f(-4.1583, -1.22942));
    measurements7.push_back(Point2f(-4.12545, -1.25219));
    measurements7.push_back(Point2f(-4.17683, -1.24033));
    measurements7.push_back(Point2f(-4.21836, -1.2007));
    measurements7.push_back(Point2f(-4.18912, -1.13449));
    measurements7.push_back(Point2f(-4.14092, -1.04262));
    measurements7.push_back(Point2f(-4.22949, -1.1803));
    measurements7.push_back(Point2f(-4.24782, -1.25028));
    measurements7.push_back(Point2f(-4.17487, -1.17437));
    measurements7.push_back(Point2f(-4.34454, -1.14836));
    measurements7.push_back(Point2f(-4.4023, -1.24023));
    measurements7.push_back(Point2f(-4.47979, -1.20137));
    measurements7.push_back(Point2f(-4.50318, -1.09053));
    measurements7.push_back(Point2f(-4.47005, -1.08752));
    measurements7.push_back(Point2f(-4.21209, -1.02));
    measurements7.push_back(Point2f(-4.23536, -0.988095));
    measurements7.push_back(Point2f(-4.19611, -0.978523));
    measurements7.push_back(Point2f(-4.24612, -0.957492));
    measurements7.push_back(Point2f(-4.4095, -1.06849));
    measurements7.push_back(Point2f(-4.53464, -1.05854));
    measurements7.push_back(Point2f(-4.53346, -1.06693));
    measurements7.push_back(Point2f(-4.52406, -1.03819));
    measurements7.push_back(Point2f(-4.3591, -1.18794));
    measurements7.push_back(Point2f(-4.30535, -1.17207));
    measurements7.push_back(Point2f(-4.36274, -1.35048));
    measurements7.push_back(Point2f(-4.27371, -1.41386));
    measurements7.push_back(Point2f(-4.21887, -1.50243));
    measurements7.push_back(Point2f(-4.40729, -1.4058));
    measurements7.push_back(Point2f(-4.26532, -1.42865));
    measurements7.push_back(Point2f(-4.21196, -1.2639));
    measurements7.push_back(Point2f(-4.14096, -1.07144));
    measurements7.push_back(Point2f(-4.16034, -0.950658));
    measurements7.push_back(Point2f(-4.06101, -0.944737));
    measurements7.push_back(Point2f(-4.17501, -0.936578));
    measurements7.push_back(Point2f(-4.19614, -1.10373));
    measurements7.push_back(Point2f(-4.32957, -1.0915));
    measurements7.push_back(Point2f(-4.26124, -1.24571));
    measurements7.push_back(Point2f(-4.24105, -1.10419));
    measurements7.push_back(Point2f(-4.09547, -1.09137));
    measurements7.push_back(Point2f(-4.04115, -1.02729));
    measurements7.push_back(Point2f(-3.92918, -1.24358));
    measurements7.push_back(Point2f(-3.86467, -1.06566));
    measurements7.push_back(Point2f(-3.80192, -1.12728));
    measurements7.push_back(Point2f(-3.88637, -1.05276));
    measurements7.push_back(Point2f(-3.82225, -1.03336));
    measurements7.push_back(Point2f(-3.90013, -1.00631));
    measurements7.push_back(Point2f(-4.10619, -1.14571));
    measurements7.push_back(Point2f(-4.29592, -1.23858));
    measurements7.push_back(Point2f(-4.37904, -1.22816));
    measurements7.push_back(Point2f(-4.5193, -1.25931));
    measurements7.push_back(Point2f(-4.43584, -1.19207));
    measurements7.push_back(Point2f(-4.36737, -1.12124));
    measurements7.push_back(Point2f(-4.19961, -1.01638));
    measurements7.push_back(Point2f(-4.19884, -0.975656));
    measurements7.push_back(Point2f(-4.08714, -1.03093));
    measurements7.push_back(Point2f(-4.07246, -1.12601));
    measurements7.push_back(Point2f(-4.06465, -1.1409));
    measurements7.push_back(Point2f(-4.14629, -1.16882));
    measurements7.push_back(Point2f(-4.08618, -1.20295));
    measurements7.push_back(Point2f(-4.17364, -1.126));
    measurements7.push_back(Point2f(-4.32578, -1.09122));
    measurements7.push_back(Point2f(-4.27332, -1.25098));
    measurements7.push_back(Point2f(-4.29911, -1.43331));
    measurements7.push_back(Point2f(-4.32618, -1.57859));
    measurements7.push_back(Point2f(-4.20689, -1.55973));
    measurements7.push_back(Point2f(-4.24129, -1.49377));
    measurements7.push_back(Point2f(-4.36796, -1.44091));
    measurements7.push_back(Point2f(-4.38034, -1.33582));
    measurements7.push_back(Point2f(-4.38342, -1.2929));
    measurements7.push_back(Point2f(-4.4197, -1.22798));
    measurements7.push_back(Point2f(-4.45347, -1.24297));
    measurements7.push_back(Point2f(-4.3328, -1.22005));
    measurements7.push_back(Point2f(-4.36514, -1.22231));
    measurements7.push_back(Point2f(-4.47279, -1.12968));
    measurements7.push_back(Point2f(-4.42429, -1.27684));
    measurements7.push_back(Point2f(-4.24655, -1.15842));
    measurements7.push_back(Point2f(-4.36707, -1.18506));
    measurements7.push_back(Point2f(-4.29471, -1.23594));
    measurements7.push_back(Point2f(-4.11844, -1.18555));
    measurements7.push_back(Point2f(-4.22163, -1.0484));
    measurements7.push_back(Point2f(-4.28529, -1.10816));
    measurements7.push_back(Point2f(-4.36197, -1.13054));
    measurements7.push_back(Point2f(-4.22681, -1.11881));
    measurements7.push_back(Point2f(-4.22036, -1.30177));
    measurements7.push_back(Point2f(-4.23585, -1.48969));
    measurements7.push_back(Point2f(-4.24854, -1.68061));
    measurements7.push_back(Point2f(-4.20426, -1.67571));
    measurements7.push_back(Point2f(-4.26006, -1.71279));
    measurements7.push_back(Point2f(-4.37533, -1.69604));
    measurements7.push_back(Point2f(-4.48641, -1.62582));
    measurements7.push_back(Point2f(-4.45228, -1.49922));
    measurements7.push_back(Point2f(-4.36876, -1.3688));
    measurements7.push_back(Point2f(-4.50862, -1.31499));
    measurements7.push_back(Point2f(-4.39881, -1.34096));
    CalibrationData data7(p7, measurements7);
    cout << "Point: " << p7 << "Vector: " << data7.getMeasuredMedianVector() << endl;

    // bottom center
    vector<Point2f> measurements8;
    Point2f p8(720, 834);
    measurements8.push_back(Point2f(-4.26501, -1.30528));
    measurements8.push_back(Point2f(-4.39473, -1.35488));
    measurements8.push_back(Point2f(-4.5424, -1.5072));
    measurements8.push_back(Point2f(-4.56305, -1.63264));
    measurements8.push_back(Point2f(-2.29936, -1.37766));
    measurements8.push_back(Point2f(-0.0316772, -1.17286));
    measurements8.push_back(Point2f(2.33219, -1.15588));
    measurements8.push_back(Point2f(4.69554, -0.875389));
    measurements8.push_back(Point2f(7.02046, -0.593719));
    measurements8.push_back(Point2f(7.12342, -0.601532));
    measurements8.push_back(Point2f(7.11109, -0.618793));
    measurements8.push_back(Point2f(7.26596, -0.576205));
    measurements8.push_back(Point2f(7.39828, -0.757619));
    measurements8.push_back(Point2f(7.5094, -0.877025));
    measurements8.push_back(Point2f(7.50402, -1.00822));
    measurements8.push_back(Point2f(7.48705, -1.14621));
    measurements8.push_back(Point2f(7.4517, -1.10934));
    measurements8.push_back(Point2f(7.38194, -1.05071));
    measurements8.push_back(Point2f(7.22404, -1.00187));
    measurements8.push_back(Point2f(7.05187, -1.10738));
    measurements8.push_back(Point2f(7.08048, -1.21609));
    measurements8.push_back(Point2f(6.83778, -1.29711));
    measurements8.push_back(Point2f(6.79749, -1.35756));
    measurements8.push_back(Point2f(6.97849, -1.40933));
    measurements8.push_back(Point2f(6.97197, -1.32566));
    measurements8.push_back(Point2f(6.92271, -1.32254));
    measurements8.push_back(Point2f(6.95343, -1.2172));
    measurements8.push_back(Point2f(6.95302, -1.13497));
    measurements8.push_back(Point2f(7.00764, -1.06704));
    measurements8.push_back(Point2f(7.03075, -1.01772));
    measurements8.push_back(Point2f(7.06705, -0.90446));
    measurements8.push_back(Point2f(7.09588, -0.946108));
    measurements8.push_back(Point2f(7.24581, -0.982443));
    measurements8.push_back(Point2f(7.05782, -1.04618));
    measurements8.push_back(Point2f(7.22967, -1.10884));
    measurements8.push_back(Point2f(7.23626, -1.09972));
    measurements8.push_back(Point2f(7.34085, -1.10212));
    measurements8.push_back(Point2f(7.40446, -1.1169));
    measurements8.push_back(Point2f(7.51283, -1.1241));
    measurements8.push_back(Point2f(7.42248, -1.16812));
    measurements8.push_back(Point2f(7.44175, -1.29609));
    measurements8.push_back(Point2f(7.5777, -1.38245));
    measurements8.push_back(Point2f(7.4654, -1.46698));
    measurements8.push_back(Point2f(7.519, -1.48002));
    measurements8.push_back(Point2f(7.52266, -1.47621));
    measurements8.push_back(Point2f(7.54927, -1.42749));
    measurements8.push_back(Point2f(7.41917, -1.40511));
    measurements8.push_back(Point2f(7.49445, -1.31424));
    measurements8.push_back(Point2f(7.50815, -1.23935));
    measurements8.push_back(Point2f(7.42507, -1.33036));
    measurements8.push_back(Point2f(7.35318, -1.23218));
    measurements8.push_back(Point2f(7.29053, -1.31064));
    measurements8.push_back(Point2f(7.23477, -1.3832));
    measurements8.push_back(Point2f(7.26034, -1.53439));
    measurements8.push_back(Point2f(7.35477, -1.41855));
    measurements8.push_back(Point2f(7.51792, -1.51211));
    measurements8.push_back(Point2f(7.72313, -1.37549));
    measurements8.push_back(Point2f(7.74122, -1.34713));
    measurements8.push_back(Point2f(7.65337, -1.35266));
    measurements8.push_back(Point2f(7.75271, -1.47653));
    measurements8.push_back(Point2f(7.56596, -1.61038));
    measurements8.push_back(Point2f(7.59362, -1.59675));
    measurements8.push_back(Point2f(7.68414, -1.53578));
    measurements8.push_back(Point2f(7.53452, -1.43047));
    measurements8.push_back(Point2f(7.34505, -1.29994));
    measurements8.push_back(Point2f(7.51759, -1.17488));
    measurements8.push_back(Point2f(7.36144, -1.27196));
    measurements8.push_back(Point2f(7.23358, -1.28108));
    measurements8.push_back(Point2f(7.50151, -1.46726));
    measurements8.push_back(Point2f(7.65858, -1.56305));
    measurements8.push_back(Point2f(7.54712, -1.61994));
    measurements8.push_back(Point2f(7.51238, -1.6659));
    measurements8.push_back(Point2f(7.59943, -1.8868));
    measurements8.push_back(Point2f(7.39786, -1.80067));
    measurements8.push_back(Point2f(7.28528, -1.70417));
    measurements8.push_back(Point2f(7.35963, -1.72788));
    measurements8.push_back(Point2f(7.49889, -1.70487));
    measurements8.push_back(Point2f(7.44356, -1.62921));
    measurements8.push_back(Point2f(7.60139, -1.64851));
    measurements8.push_back(Point2f(7.63805, -1.71761));
    measurements8.push_back(Point2f(7.70814, -1.73105));
    measurements8.push_back(Point2f(7.72642, -1.75586));
    measurements8.push_back(Point2f(7.87777, -1.69371));
    measurements8.push_back(Point2f(7.76774, -1.57945));
    measurements8.push_back(Point2f(7.66596, -1.45856));
    measurements8.push_back(Point2f(7.61065, -1.30324));
    measurements8.push_back(Point2f(7.53482, -1.33008));
    measurements8.push_back(Point2f(7.47862, -1.3796));
    measurements8.push_back(Point2f(7.62556, -1.4892));
    measurements8.push_back(Point2f(7.76181, -1.60547));
    measurements8.push_back(Point2f(7.6904, -1.6813));
    measurements8.push_back(Point2f(7.65762, -1.50575));
    measurements8.push_back(Point2f(7.57422, -1.3828));
    measurements8.push_back(Point2f(7.39869, -1.34855));
    measurements8.push_back(Point2f(7.34992, -1.38931));
    measurements8.push_back(Point2f(7.54614, -1.41435));
    measurements8.push_back(Point2f(7.61717, -1.53175));
    measurements8.push_back(Point2f(7.69167, -1.47235));
    measurements8.push_back(Point2f(7.76586, -1.37493));
    measurements8.push_back(Point2f(7.72711, -1.16765));
    measurements8.push_back(Point2f(7.54037, -1.14726));
    measurements8.push_back(Point2f(7.48657, -1.18091));
    measurements8.push_back(Point2f(7.43993, -1.15598));
    measurements8.push_back(Point2f(7.41754, -1.12269));
    measurements8.push_back(Point2f(7.56315, -1.32819));
    measurements8.push_back(Point2f(7.58788, -1.19798));
    measurements8.push_back(Point2f(7.76495, -1.20258));
    measurements8.push_back(Point2f(7.84716, -1.36674));
    measurements8.push_back(Point2f(7.90534, -1.47552));
    measurements8.push_back(Point2f(7.83215, -1.43679));
    measurements8.push_back(Point2f(7.89342, -1.63804));
    measurements8.push_back(Point2f(7.84696, -1.61189));
    measurements8.push_back(Point2f(7.78199, -1.63258));
    measurements8.push_back(Point2f(7.71133, -1.61669));
    measurements8.push_back(Point2f(7.572, -1.51098));
    measurements8.push_back(Point2f(7.56172, -1.38165));
    measurements8.push_back(Point2f(7.55397, -1.26857));
    measurements8.push_back(Point2f(7.5513, -1.25231));
    measurements8.push_back(Point2f(7.59454, -1.11038));
    measurements8.push_back(Point2f(7.77855, -1.2067));
    measurements8.push_back(Point2f(7.68642, -1.26672));
    measurements8.push_back(Point2f(7.61634, -1.36208));
    measurements8.push_back(Point2f(7.48001, -1.36477));
    measurements8.push_back(Point2f(7.42088, -1.49213));
    measurements8.push_back(Point2f(7.38467, -1.49393));
    measurements8.push_back(Point2f(7.36134, -1.49035));
    measurements8.push_back(Point2f(7.12093, -1.43872));
    measurements8.push_back(Point2f(7.04987, -1.38649));
    measurements8.push_back(Point2f(7.01283, -1.40036));
    measurements8.push_back(Point2f(7.05694, -1.41728));
    measurements8.push_back(Point2f(7.07642, -1.42841));
    measurements8.push_back(Point2f(7.25434, -1.46918));
    measurements8.push_back(Point2f(7.37878, -1.52248));
    CalibrationData data8(p8, measurements7);
    cout << "Point: " << p8 << "Vector: " << data8.getMeasuredMedianVector() << endl;

    // bottom right
    vector<Point2f> measurements9;
    Point2f p9(1400, 834);
    measurements9.push_back(Point2f(7.41384, -1.5969));
    measurements9.push_back(Point2f(7.32695, -1.57741));
    measurements9.push_back(Point2f(7.34756, -1.60494));
    measurements9.push_back(Point2f(7.29016, -1.58748));
    measurements9.push_back(Point2f(9.69194, -1.49664));
    measurements9.push_back(Point2f(12.0331, -1.40221));
    measurements9.push_back(Point2f(14.498, -1.32916));
    measurements9.push_back(Point2f(16.9293, -1.21183));
    measurements9.push_back(Point2f(19.4772, -1.22565));
    measurements9.push_back(Point2f(19.4394, -1.20392));
    measurements9.push_back(Point2f(19.5576, -1.18222));
    measurements9.push_back(Point2f(19.6034, -1.07231));
    measurements9.push_back(Point2f(19.6269, -1.14487));
    measurements9.push_back(Point2f(19.4876, -1.08808));
    measurements9.push_back(Point2f(19.6145, -1.18293));
    measurements9.push_back(Point2f(19.6451, -1.10834));
    measurements9.push_back(Point2f(19.4781, -1.10878));
    measurements9.push_back(Point2f(19.4806, -1.09264));
    measurements9.push_back(Point2f(19.4024, -1.03757));
    measurements9.push_back(Point2f(19.3835, -1.05893));
    measurements9.push_back(Point2f(19.1868, -1.10285));
    measurements9.push_back(Point2f(19.2168, -1.21274));
    measurements9.push_back(Point2f(19.0748, -1.13674));
    measurements9.push_back(Point2f(19.0466, -1.28326));
    measurements9.push_back(Point2f(18.9213, -1.25153));
    measurements9.push_back(Point2f(19.0363, -1.23091));
    measurements9.push_back(Point2f(18.9597, -1.17079));
    measurements9.push_back(Point2f(19.001, -1.32075));
    measurements9.push_back(Point2f(19.0174, -1.27285));
    measurements9.push_back(Point2f(19.029, -1.24015));
    measurements9.push_back(Point2f(19.0661, -1.29761));
    measurements9.push_back(Point2f(19.1125, -1.44468));
    measurements9.push_back(Point2f(19.1807, -1.38293));
    measurements9.push_back(Point2f(19.3472, -1.33095));
    measurements9.push_back(Point2f(19.234, -1.31348));
    measurements9.push_back(Point2f(19.2433, -1.4012));
    measurements9.push_back(Point2f(19.3281, -1.31013));
    measurements9.push_back(Point2f(19.3076, -1.29169));
    measurements9.push_back(Point2f(19.2598, -1.33099));
    measurements9.push_back(Point2f(19.4539, -1.38989));
    measurements9.push_back(Point2f(19.3921, -1.31386));
    measurements9.push_back(Point2f(19.2405, -1.25342));
    measurements9.push_back(Point2f(19.1833, -1.21627));
    measurements9.push_back(Point2f(19.1558, -1.17688));
    measurements9.push_back(Point2f(19.0529, -1.09236));
    measurements9.push_back(Point2f(18.9427, -1.01891));
    measurements9.push_back(Point2f(19.0173, -1.17173));
    measurements9.push_back(Point2f(19.1288, -1.31597));
    measurements9.push_back(Point2f(19.1057, -1.44896));
    measurements9.push_back(Point2f(19.2317, -1.55322));
    measurements9.push_back(Point2f(19.2329, -1.64595));
    measurements9.push_back(Point2f(19.1362, -1.61464));
    measurements9.push_back(Point2f(18.914, -1.57898));
    measurements9.push_back(Point2f(18.995, -1.40032));
    measurements9.push_back(Point2f(18.812, -1.24274));
    measurements9.push_back(Point2f(18.8657, -1.14465));
    measurements9.push_back(Point2f(18.9033, -1.11916));
    measurements9.push_back(Point2f(19.0157, -0.896396));
    measurements9.push_back(Point2f(18.8414, -0.865411));
    measurements9.push_back(Point2f(18.9662, -0.998682));
    measurements9.push_back(Point2f(19.0504, -1.00141));
    measurements9.push_back(Point2f(19.166, -1.09486));
    measurements9.push_back(Point2f(19.2432, -1.25695));
    measurements9.push_back(Point2f(19.2773, -1.39529));
    measurements9.push_back(Point2f(19.1552, -1.43204));
    measurements9.push_back(Point2f(18.9686, -1.38658));
    measurements9.push_back(Point2f(18.9625, -1.34041));
    measurements9.push_back(Point2f(18.9645, -1.25706));
    measurements9.push_back(Point2f(19.0572, -1.21131));
    measurements9.push_back(Point2f(19.1281, -1.157));
    measurements9.push_back(Point2f(19.2595, -1.28206));
    measurements9.push_back(Point2f(19.1937, -1.12169));
    measurements9.push_back(Point2f(19.0565, -1.22656));
    measurements9.push_back(Point2f(19.0227, -1.17026));
    measurements9.push_back(Point2f(19.0018, -1.0835));
    CalibrationData data9(p9, measurements9);
    cout << "Point: " << p9 << "Vector: " << data9.getMeasuredMedianVector() << endl;

    calib.addCalibrationData(data1);
    calib.addCalibrationData(data2);
    calib.addCalibrationData(data3);
    calib.addCalibrationData(data4);
    calib.addCalibrationData(data5);
    calib.addCalibrationData(data6);
    calib.addCalibrationData(data7);
    calib.addCalibrationData(data8);
    calib.addCalibrationData(data9);

    CalibrationVisualizer calibVisual(&calib);

    CPPUNIT_ASSERT(calib.calibrate(100, 3));
    //    calib.printCalibration();
    //
    calibVisual.printCalibration();
    calibVisual.printCalibration(measurements1);
    calibVisual.printCalibration(measurements2);
    calibVisual.printCalibration(measurements3);
    calibVisual.printCalibration(measurements4);
    calibVisual.printCalibration(measurements5);
    calibVisual.printCalibration(measurements6);
    calibVisual.printCalibration(measurements7);
    calibVisual.printCalibration(measurements8);
    calibVisual.printCalibration(measurements9);
    
    calibVisual.printCoefficients();

    //    calib.calcCalibrationDataDistance();
    //    calib.calcAverageDeviation();
    //    
    //    calib.removeWorstCalibrationData();
    //    calib.calcAverageDeviation();

    waitKey(0);
}


